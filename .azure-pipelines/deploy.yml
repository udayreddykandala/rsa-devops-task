trigger:
- main

pool:
  name: 'Default'   # your self-hosted agent pool

variables:
  buildConfiguration: 'Release'
  terraformVersion: '1.5.7'

stages:
- stage: Terraform
  displayName: "Terraform Infrastructure"
  jobs:
  - job: TerraformJob
    displayName: "Run Terraform with Azure DevOps"
    steps:
    - checkout: self

    - script: |
        curl -o terraform.zip https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_darwin_arm64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: "Install Terraform"

    - script: |
        terraform init \
          -backend-config="storage_account_name=$(tf_storage_account)" \
          -backend-config="container_name=$(tf_container_name)" \
          -backend-config="key=$(tf_state_key)" \
          -backend-config="resource_group_name=$(tf_rg_name)" \
          -backend-config="subscription_id=$(AZURE_SUBSCRIPTION_ID)"
      displayName: "Terraform Init"
      workingDirectory: infra

    - script: |
        terraform plan -out=tfplan -parallelism=10 -input=false
      displayName: "Terraform Plan"
      workingDirectory: infra

    - script: |
        terraform apply -auto-approve tfplan
      displayName: "Terraform Apply"
      workingDirectory: infra

- stage: Deploy
  displayName: "Deploy to Octopus"
  dependsOn: Terraform
  jobs:
  - job: OctopusJob
    displayName: "Deploy App via Octopus CLI"
    steps:
    - script: |
        curl -L https://github.com/OctopusDeploy/OctopusCLI/releases/download/v9.3.7/OctopusTools.9.3.7.osx-x64.tar.gz -o octo.tar.gz
        mkdir octo
        tar -xzf octo.tar.gz -C octo
        sudo mv octo/octo /usr/local/bin/
        octo version

        # Push package + create release + deploy
        octo push \
          --server $(OCTOPUS_SERVER) \
          --apiKey $(OCTOPUS_API_KEY) \
          --space $(octopus_space) \
          --package $(Build.ArtifactStagingDirectory)/myapp.zip

        octo create-release \
          --server $(OCTOPUS_SERVER) \
          --apiKey $(OCTOPUS_API_KEY) \
          --space $(octopus_space) \
          --project "MyProject" \
          --releaseNumber 1.0.$(Build.BuildId) \
          --packageVersion 1.0.$(Build.BuildId)

        octo deploy-release \
          --server $(OCTOPUS_SERVER) \
          --apiKey $(OCTOPUS_API_KEY) \
          --space $(octopus_space) \
          --project "MyProject" \
          --deployTo $(octopus_environment)
      displayName: "Deploy via Octopus CLI"
